{
  "name": "packer",
  "description": "Installs/Configures packer",
  "long_description": "chef-ami-factory\n================\nThis is a demo on how to set up an AMI factory using [Chef](http://www.getchef.com/), [Berkshelf](http://berkshelf.com), and [Packer](http://www.packer.io) to address just-in-time configuration management challenges like auto-scaling.  It is **_not_** a recommended practice to generate static images as a substitute for configuration management.\n\nFor guidelines on how to use pre-loaded AMIs with configuration management, check out this [video](http://www.getchef.com/blog/chefconf-talks/cooking-with-chef-and-amazons-cloud-formation-jeremy-przygode/)  on using pre-loaded AMIs with CloudFormation or [slides](http://bit.ly/chef-ami-factory) from the talk for which this demo was written.  Work in this repo is based upon this [tutorial](http://engineering.cotap.com/post/78783269747/hello-world-using-packer-chef-and-berkshelf-on-ec2).\n\n-----\nRequirements\n============\n### Chef & Berkshelf\nYou must have chef binaries and 'berks' in your $PATH.  The easiest way to get both is to install the [ChefDK](http://www.getchef.com/downloads/chef-dk/mac/).\n\n### Packer\nPacker must be installed and in your $PATH.  Instructions available [here](http://www.packer.io/intro/getting-started/setup.html).\n\n### Openssl\nThis repo includes a helper script to generate AWS API x509 certificates for use with IAM.  In order to use the script, 'openssl' must be in your $PATH.\n\n### Supported Operating Systems\nThis demo has been tested exclusively on OSX, but it should run on any other platform supported by the required tools.  Please submit comments if you've used this beyond OSX.\n\n\nHow to use this repo\n====================\nClone the repo and 'cd' into it.\n\nGenerate x509 certificates for AWS if you do not already have these.  Give the 'cert_gen.sh' script an argument of username (arbitrary) you wish to use for these keys.\n\n` ./cert_gen.sh bob` \n\nThe cert_gen.sh script will place them in a .packer dir in your home directory.  In the example above, three new files now exist:\n\n* ~/.packer/bob-certificate.pem\n* ~/.packer/bob-key.pem\n* ~/.packer/bob-pem-PCKS8-format.pem\n\nUpdate your ~/.bashrc with these values if you have not already:\n\n    #AWS Settings\n    export AWS_ACCESS_KEY_ID=AKIABCDEFGHIJKLMNOP\n    export AWS_SECRET_ACCESS_KEY=fweifeoifjwef/thkopyhtkotykhyth\n    export AWS_X509_CERT_PATH=~/.packer/bob_certificate.pem\n    export AWS_X509_KEY_PATH=~/.packer/bob_key.pem\n    export AWS_ACCOUNT_ID='1234-5678-9999'\n\nReload your .bashrc\n\n`source ~/.bashrc`\n\nRun the ami_factory.sh script\n\n`./ami_factory.sh`\n\n---\n\nSubmitting Changes\n==================\nThis tool is meant as a quickstart Chef+Berks+Packer demo.  It is not intended to be a full-fledged AMI generator.  But I'm happy to accept Pull Requests.\n\n1. Fork the repo\n2. Make changes\n3. Submit a Pull Request\n\nLicense and Author\n==================\n- Author: George Miranda (<george.miranda@gmail.com>)\n\n```\nCopyright 2014, George Miranda (<george.miranda@gmail.com>)\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "maintainer": "YOUR_COMPANY_NAME",
  "maintainer_email": "YOUR_EMAIL",
  "license": "All rights reserved",
  "platforms": {
    "ubuntu": ">= 0.0.0"
  },
  "dependencies": {
    "apt": ">= 0.0.0",
    "nginx": ">= 0.0.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
  },
  "version": "0.1.0",
  "source_url": "",
  "issues_url": "",
  "privacy": false,
  "chef_versions": [

  ],
  "ohai_versions": [

  ],
  "gems": [

  ]
}